import React, { useEffect, useState } from 'react'
import { getAllCloudsAdmin, deleteCloudAdmin } from '../../../../Api/ApiCall';
import { useNavigate } from "react-router-dom";
import { useDispatch } from "react-redux";
import Swal from "sweetalert2";
import { toast } from "react-toastify";
import { loadSpinner } from "../../../../Redux/Features/NavbarSlice";



const AdminCloud = () => {

    const [data, setData] = useState([])
    const [showOtherSVGs, setShowOtherSVGs] = useState({});
    const [id, setId] = useState('')

    const navigate = useNavigate();
    const dispatch = useDispatch();

    useEffect(() => {
        dispatch(loadSpinner());
        getAllCloudsAdmin().then((data) => {
            console.log("data in getAllCloudsAdmin", data.data.cloudData)
            const cloudData = data.data.cloudData
            setData(cloudData)
        }).catch((error) => {
            console.log(error)
        }).finally(() => {
            dispatch(loadSpinner());
        })
    }, [id])

    const handleDelete = async (id) => {
        try {
            setId(id)
            console.log("id in delete cloud:", id)
            const response = await deleteCloudAdmin(id)
            console.log("response in deleteCloudAdmin: ", response)
            toast.warning("Cloud deleted");
            setId('')
        } catch (error) {
            toast.error("Failed to delete cloud");
            console.log("error in handleDelete", error)
        }
    }

    const handleEdit = (data) => {
        navigate("/admin/addCloud", { state: { data } });
    }

    const toggleOtherSVGs = (itemId) => {
        setShowOtherSVGs((prev) => ({
            ...prev,
            [itemId]: !prev[itemId],
        }));
    };


    return (
        <div className="bg-containerWhite p-10 rounded-md shadow-md">
            <div className="flex justify-between flex-raw md:flex-row font-bold">
                Clouds
                <button
                    className="px-3 py-3 flex gap-4 justify-center items-center shadow-md"
                    style={{ backgroundColor: "#F4F5FA" }}
                    onClick={() => navigate("/admin/addCloud")}
                >
                    Add Cloud
                    <svg
                        width="16"
                        height="16"
                        viewBox="0 0 16 16"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                    >
                        <path
                            d="M8 0C3.58185 0 0 3.58185 0 8C0 12.4182 3.58185 16 8 16C12.4182 16 16 12.4182 16 8C16 3.58185 12.4182 0 8 0ZM8 15.3846C3.92154 15.3846 0.615385 12.0785 0.615385 8C0.615385 3.92154 3.92154 0.615385 8 0.615385C12.0785 0.615385 15.3846 3.92154 15.3846 8C15.3846 12.0785 12.0785 15.3846 8 15.3846Z"
                            fill="black"
                        />
                        <path
                            d="M13.0811 7.69261H8.3119V2.92338C8.3119 2.83845 8.24298 2.76953 8.15805 2.76953H7.85036C7.76544 2.76953 7.69652 2.83845 7.69652 2.92338V7.69261H2.92728C2.84236 7.69261 2.77344 7.76153 2.77344 7.84646V8.15415C2.77344 8.23907 2.84236 8.30799 2.92728 8.30799H7.69652V13.0772C7.69652 13.1618 7.76544 13.2311 7.85036 13.2311H8.15805C8.24298 13.2311 8.3119 13.1618 8.3119 13.0772V8.30799H13.0811C13.1657 8.30799 13.235 8.23907 13.235 8.15415V7.84646C13.235 7.76153 13.1657 7.69261 13.0811 7.69261Z"
                            fill="black"
                        />
                    </svg>
                </button>
            </div>
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-6">
                {data.length === 0 ? (
                    <p>No data found</p>
                ) : (
                    data.map((item, index) => (
                        <div key={index} className=" rounded-md shadow-sm p-4 bg-gradient-to-b">
                            <div className="flex md:flex-col lg:flex-row justify-between items-center w-full">
                                <div className='w-1/4'>
                                    <img
                                        alt="cloudImg"
                                        className="w-28 h-full object-cover"
                                        src={item.image}
                                    />
                                </div>
                                {/* {getSVG(index)} */}
                                <div className='w-2/4'>
                                    <h1 className="font-bold text-2xl pb-2">{item.cloudName}</h1>
                                    <div className="px-3 p-1 flex justify-center items-center text-white rounded-lg bg-navblue">
                                        $ {item.cloudPrice}
                                    </div>
                                </div>
                                <div className="relative cursor-pointer">
                                    <svg
                                        onClick={() => toggleOtherSVGs(item._id)}
                                        width="30"
                                        height="30"
                                        viewBox="0 0 30 30"
                                        fill="none"
                                        xmlns="http://www.w3.org/2000/svg"
                                    >
                                        <rect width="30" height="30" rx="10" fill="#DCE5F2" />
                                        <path d="M15.1669 10.3338C15.8113 10.3338 16.3338 9.81133 16.3338 9.16688C16.3338 8.52243 15.8113 8 15.1669 8C14.5224 8 14 8.52243 14 9.16688C14 9.81133 14.5224 10.3338 15.1669 10.3338Z" fill="black" />
                                        <path d="M15.1669 16.1716C15.8113 16.1716 16.3338 15.6492 16.3338 15.0048C16.3338 14.3603 15.8113 13.8379 15.1669 13.8379C14.5224 13.8379 14 14.3603 14 15.0048C14 15.6492 14.5224 16.1716 15.1669 16.1716Z" fill="black" />
                                        <path d="M15.1669 21.9998C15.8113 21.9998 16.3338 21.4773 16.3338 20.8329C16.3338 20.1884 15.8113 19.666 15.1669 19.666C14.5224 19.666 14 20.1884 14 20.8329C14 21.4773 14.5224 21.9998 15.1669 21.9998Z" fill="black" />
                                    </svg>
                                    {showOtherSVGs[item._id] && (
                                        <div className="absolute top-full right-0 z-10 flex flex-col gap-1">
                                            {/* Second SVG */}
                                            <svg
                                                onClick={() => {
                                                    handleEdit(item);
                                                }}
                                                className="mt-1"
                                                width="30"
                                                height="30"
                                                viewBox="0 0 30 30"
                                                fill="none"
                                                xmlns="http://www.w3.org/2000/svg"
                                            >
                                                <rect width="30" height="30" rx="10" fill="#DCE5F2" />
                                                <path d="M10.4932 19.5124C10.4766 19.5122 10.4602 19.5086 10.445 19.5019C10.4298 19.4952 10.4161 19.4855 10.4047 19.4734C10.3933 19.4613 10.3845 19.447 10.3788 19.4314C10.373 19.4158 10.3704 19.3992 10.3712 19.3826L10.501 17.286C10.5021 17.2562 10.5147 17.2279 10.5361 17.207L17.54 10.2031C17.6704 10.073 17.8471 10 18.0313 10C18.2154 10 18.3921 10.073 18.5225 10.2031L19.6805 11.366C19.8104 11.4965 19.8832 11.6732 19.8832 11.8572C19.8832 12.0413 19.8104 12.2179 19.6805 12.3485L12.6766 19.3475C12.6557 19.3688 12.6274 19.3814 12.5976 19.3826L10.501 19.5124H10.4932ZM10.741 17.3465L10.6229 19.2597L12.5361 19.1426L19.5079 12.1709C19.5921 12.0861 19.6394 11.9714 19.6394 11.8519C19.6394 11.7323 19.5921 11.6177 19.5079 11.5329L18.3508 10.3758C18.266 10.2915 18.1513 10.2443 18.0318 10.2443C17.9122 10.2443 17.7975 10.2915 17.7127 10.3758L10.741 17.3465Z" fill="#000104" stroke="black" stroke-width="0.4" />
                                                <path d="M11.6505 18.3481C11.6263 18.3483 11.6026 18.3413 11.5824 18.3281C11.5622 18.3148 11.5464 18.2958 11.537 18.2736C11.5276 18.2513 11.525 18.2267 11.5296 18.203C11.5341 18.1793 11.5457 18.1574 11.5627 18.1402L17.6027 12.1022C17.6141 12.0908 17.6275 12.0818 17.6423 12.0757C17.6571 12.0696 17.673 12.0664 17.6891 12.0664C17.7051 12.0664 17.721 12.0696 17.7358 12.0757C17.7506 12.0818 17.7641 12.0908 17.7754 12.1022C17.7867 12.1135 17.7957 12.127 17.8019 12.1418C17.808 12.1566 17.8112 12.1725 17.8112 12.1885C17.8112 12.2045 17.808 12.2204 17.8019 12.2352C17.7957 12.2501 17.7867 12.2635 17.7754 12.2749L11.7373 18.3129C11.714 18.3355 11.6829 18.3481 11.6505 18.3481Z" fill="#000104" stroke="black" stroke-width="0.4" />
                                                <path d="M18.6675 13.2928C18.6351 13.2928 18.6039 13.2802 18.5807 13.2577L16.6128 11.2889C16.5921 11.2656 16.5811 11.2353 16.5821 11.2041C16.583 11.173 16.5959 11.1434 16.618 11.1214C16.6401 11.0994 16.6698 11.0868 16.7009 11.086C16.7321 11.0852 16.7623 11.0964 16.7855 11.1172L18.7533 13.085C18.7702 13.1021 18.7817 13.1237 18.7864 13.1473C18.791 13.1708 18.7886 13.1953 18.7794 13.2174C18.7703 13.2396 18.7548 13.2586 18.7348 13.272C18.7149 13.2854 18.6915 13.2927 18.6675 13.2928Z" fill="#000104" stroke="black" stroke-width="0.4" />
                                                <path d="M12.6293 19.3362C12.6133 19.3363 12.5974 19.3332 12.5826 19.327C12.5679 19.3208 12.5545 19.3116 12.5434 19.3001L10.5746 17.3323C10.5633 17.321 10.5544 17.3076 10.5483 17.2929C10.5422 17.2781 10.5391 17.2624 10.5391 17.2464C10.5391 17.2305 10.5422 17.2147 10.5483 17.2C10.5544 17.1852 10.5633 17.1718 10.5746 17.1606C10.5859 17.1493 10.5993 17.1403 10.614 17.1342C10.6287 17.1281 10.6445 17.125 10.6605 17.125C10.6764 17.125 10.6922 17.1281 10.7069 17.1342C10.7217 17.1403 10.7351 17.1493 10.7463 17.1606L12.7141 19.1284C12.7255 19.1396 12.7345 19.153 12.7406 19.1677C12.7467 19.1825 12.7499 19.1983 12.7499 19.2142C12.7499 19.2302 12.7467 19.246 12.7406 19.2607C12.7345 19.2755 12.7255 19.2888 12.7141 19.3001C12.7031 19.3115 12.69 19.3206 12.6754 19.3268C12.6608 19.333 12.6451 19.3362 12.6293 19.3362Z" fill="#000104" stroke="black" stroke-width="0.4" />
                                                <path d="M10.1216 19.879C10.1056 19.8791 10.0897 19.8759 10.075 19.8697C10.0602 19.8635 10.0469 19.8544 10.0357 19.8429C10.0244 19.8316 10.0154 19.8182 10.0093 19.8035C10.0032 19.7888 10 19.773 10 19.757C10 19.741 10.0032 19.7252 10.0093 19.7105C10.0154 19.6958 10.0244 19.6824 10.0357 19.6711L10.4026 19.3033C10.4139 19.292 10.4274 19.283 10.4422 19.2769C10.457 19.2707 10.4729 19.2676 10.4889 19.2676C10.505 19.2676 10.5208 19.2707 10.5356 19.2769C10.5505 19.283 10.5639 19.292 10.5753 19.3033C10.5866 19.3147 10.5956 19.3281 10.6017 19.343C10.6079 19.3578 10.611 19.3736 10.611 19.3897C10.611 19.4057 10.6079 19.4216 10.6017 19.4364C10.5956 19.4512 10.5866 19.4647 10.5753 19.476L10.2075 19.8429C10.1963 19.8544 10.183 19.8635 10.1682 19.8697C10.1535 19.8759 10.1376 19.8791 10.1216 19.879Z" fill="#000104" stroke="black" stroke-width="0.4" />
                                                <path d="M16.8322 19.9998H13.1493C13.117 19.9998 13.0859 19.9869 13.0631 19.964C13.0402 19.9412 13.0273 19.9102 13.0273 19.8778C13.0273 19.8455 13.0402 19.8144 13.0631 19.7916C13.0859 19.7687 13.117 19.7559 13.1493 19.7559H16.8322C16.8646 19.7559 16.8956 19.7687 16.9185 19.7916C16.9413 19.8144 16.9542 19.8455 16.9542 19.8778C16.9542 19.9102 16.9413 19.9412 16.9185 19.964C16.8956 19.9869 16.8646 19.9998 16.8322 19.9998Z" fill="#000104" stroke="black" stroke-width="0.4" />
                                            </svg>
                                            <svg
                                                onClick={(e) => {
                                                    e.stopPropagation(); // Prevent click from bubbling to the card div
                                                    Swal.fire({
                                                        title: "Are you sure?",
                                                        text: "You want delete this!",
                                                        icon: "warning",
                                                        showCancelButton: true,
                                                        confirmButtonColor: "#3085d6",
                                                        cancelButtonColor: "#d33",
                                                        confirmButtonText: "Yes, delete it!",
                                                    }).then((result) => {
                                                        if (result.isConfirmed) {
                                                            // If confirmed, perform the delete operation
                                                            // You can place your delete logic here
                                                            handleDelete(item._id);
                                                        }
                                                    });
                                                }}
                                                width="30"
                                                height="30"
                                                viewBox="0 0 30 30"
                                                fill="none"
                                                xmlns="http://www.w3.org/2000/svg"
                                            >
                                                <rect width="30" height="30" rx="10" fill="#DB3022" fill-opacity="0.6" />
                                                <path d="M11.4539 10.3129H13.4629V9.3151C13.4629 9.13129 13.5951 9 13.7801 9C13.7801 9 13.7801 9 13.8066 9L17.0051 9.02626C17.1637 9.02626 17.2959 9.15755 17.2959 9.3151V10.3129H19.1992H20.468C20.6266 10.3129 20.7588 10.4705 20.7588 10.628C20.7588 10.7856 20.6266 10.9168 20.468 10.9168H19.6221V20.2648C19.6221 20.4486 19.5428 20.6324 19.4107 20.7899C19.2785 20.9212 19.0934 21 18.882 21H11.9033C11.6918 21 11.5068 20.9212 11.3746 20.7899C11.2424 20.6324 11.1367 20.4486 11.1367 20.2648V10.9168H10.3172C10.1322 10.9168 10 10.7856 10 10.628C10 10.4705 10.1322 10.3129 10.3172 10.3129H11.1367H11.4539ZM14.0709 10.3129H16.6879V9.60394H14.0709V10.3129ZM17.4545 18.2954C17.4545 18.453 17.3223 18.5842 17.1637 18.5842C17.0051 18.5842 16.873 18.453 16.873 18.2954V13.0175C16.873 12.86 17.0051 12.7287 17.1637 12.7287C17.3223 12.7287 17.4545 12.86 17.4545 13.0175V18.2954ZM15.6834 18.2954C15.6834 18.453 15.5512 18.5842 15.3926 18.5842C15.2076 18.5842 15.0754 18.453 15.0754 18.2954V13.0175C15.0754 12.86 15.2076 12.7287 15.3926 12.7287C15.5512 12.7287 15.6834 12.86 15.6834 13.0175V18.2954ZM13.9123 18.2954C13.9123 18.453 13.7801 18.5842 13.5951 18.5842C13.4365 18.5842 13.3043 18.453 13.3043 18.2954V13.0175C13.3043 12.86 13.4365 12.7287 13.5951 12.7287C13.7801 12.7287 13.9123 12.86 13.9123 13.0175V18.2954ZM19.0406 10.9168H13.7801H11.7447V20.2648C11.7447 20.291 11.7447 20.3435 11.7975 20.3698C11.824 20.3961 11.8504 20.3961 11.9033 20.3961H18.882C18.9084 20.3961 18.9613 20.3961 18.9877 20.3698C19.0141 20.3435 19.0406 20.291 19.0406 20.2648V10.9168Z" fill="white" />
                                            </svg>
                                        </div>
                                    )}
                                </div>
                            </div>
                            {item.specification.map((desc, index) => (
                                <div className="flex items-center mt-4">
                                    <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd" clip-rule="evenodd" d="M7 0C10.8657 0 14 3.13428 14 7C14 10.8657 10.8657 14 7 14C3.13428 14 0 10.8657 0 7C0 3.13428 3.13428 0 7 0ZM4.49805 6.47022C5.02214 6.77214 5.36279 7.02279 5.76953 7.47054C6.82227 5.77523 7.96615 4.83643 9.45182 3.50228L9.59766 3.44645H11.2246C9.04395 5.86865 7.35205 7.86589 5.83789 10.7871C5.04948 9.10205 4.34652 7.9388 2.77539 6.85986L4.49805 6.47022Z" fill="#3AAF3C" />
                                    </svg>
                                    <span className='ml-2'>{desc}</span>
                                </div>
                            ))}
                            <div className="flex gap-5 justify-center items-center mt-4">
                                <h1>
                                    {item?.cloudStorage?.storageCapacity}{" "}
                                    {item?.cloudStorage?.storage} Storage
                                </h1>

                                <svg
                                    width="81"
                                    height="81"
                                    viewBox="0 0 81 81"
                                    fill="none"
                                    xmlns="http://www.w3.org/2000/svg"
                                >
                                    <path
                                        d="M81 40.5C81 62.8675 62.8675 81 40.5 81C18.1325 81 0 62.8675 0 40.5C0 18.1325 18.1325 0 40.5 0C62.8675 0 81 18.1325 81 40.5ZM7.96785 40.5C7.96785 58.467 22.533 73.0322 40.5 73.0322C58.467 73.0322 73.0322 58.467 73.0322 40.5C73.0322 22.533 58.467 7.96785 40.5 7.96785C22.533 7.96785 7.96785 22.533 7.96785 40.5Z"
                                        fill="#5C70E1"
                                    />
                                    <path
                                        fill-rule="evenodd"
                                        clip-rule="evenodd"
                                        d="M39.9783 37.4273C42.329 38.8869 44.4526 39.5774 46.2752 39.4137C46.5936 45.7213 44.216 49.4459 40.0027 51C35.9341 49.5454 33.5276 45.981 33.7058 39.3182C35.8457 39.4282 37.9445 38.975 39.9783 37.4273ZM45.2702 35.2041C45.1118 35.2807 44.9508 35.3658 44.7924 35.4548C44.3165 35.7284 43.8463 36.0622 43.3664 36.4458L42.3422 35.2976C42.6956 34.9762 43.0785 34.6837 43.4847 34.425C43.8082 34.2176 44.1469 34.033 44.4963 33.8758C44.636 33.8072 44.7756 33.743 44.9193 33.6828C44.2444 32.5117 43.273 31.672 42.1731 31.1541C41.0726 30.6377 39.8412 30.4387 38.6417 30.5526C37.4504 30.6651 36.2931 31.0894 35.3369 31.8172C34.2304 32.6565 33.3899 33.9131 33.0665 35.5772L32.9649 36.0975L32.4358 36.1886C31.9173 36.2776 31.4542 36.4 31.0479 36.5557C30.6543 36.705 30.3029 36.8895 29.9962 37.1069C29.751 37.281 29.5392 37.4761 29.3594 37.6875C28.8029 38.3402 28.5449 39.159 28.551 39.9883C28.5662 42.0195 29.9546 43.5995 31.9726 43.8746H32.0336C32.1448 44.4054 32.2748 44.9139 32.4226 45.4004H31.9472L31.8497 45.3919C31.2851 45.3213 30.7727 45.191 30.3075 45.0024C28.2778 44.1791 27.0159 42.124 27.0001 39.9923C26.992 38.8192 27.3642 37.6522 28.1686 36.707C28.4286 36.4 28.7353 36.1184 29.0862 35.8697C29.495 35.5792 29.9627 35.3349 30.4913 35.1339C30.8554 34.9946 31.2449 34.8787 31.6552 34.7857C32.1204 32.9739 33.1132 31.5789 34.3888 30.6109C35.5822 29.7049 37.0188 29.1766 38.4975 29.0378C39.9702 28.8985 41.4855 29.1433 42.8459 29.7835C44.3287 30.4825 45.6236 31.6451 46.4641 33.2808C46.8023 33.2286 47.141 33.2017 47.4772 33.2057C48.899 33.2161 50.2701 33.7141 51.3492 34.8538C51.5757 35.0921 51.7895 35.3618 51.9906 35.6622C52.6675 36.6821 53.0144 38.0442 52.9996 39.3764C52.9849 40.6848 52.6249 41.9862 51.8885 42.9438C51.4086 43.5677 50.7927 44.0776 50.0543 44.482C49.3611 44.8616 48.5558 45.1531 47.6534 45.3631C47.8179 44.8228 47.9581 44.2577 48.0723 43.6672C48.5182 43.5234 48.9254 43.3528 49.2906 43.1533C49.8471 42.8488 50.3021 42.4777 50.6424 42.032C51.1715 41.3415 51.432 40.3654 51.4427 39.364C51.4554 38.3133 51.1928 37.2582 50.683 36.4915C50.5425 36.2784 50.3831 36.0778 50.2067 35.8921C49.4429 35.0862 48.474 34.7335 47.4665 34.7275C46.7408 34.721 45.9857 34.8931 45.2702 35.2041ZM40.0469 39.6247C41.6368 40.6117 43.0724 41.0788 44.3054 40.9684C44.5202 45.2327 42.9124 47.7515 40.0641 48.8027C40.0458 48.7962 40.0281 48.7897 40.0103 48.7828V39.652L40.0469 39.6247ZM39.9813 38.4521C42.0446 39.7336 43.9083 40.3395 45.5084 40.1963C45.5952 45.6068 43.5954 48.5425 40.0027 49.9747C36.5363 48.639 34.4431 45.8904 34.4756 40.1122C36.3535 40.2087 38.1959 39.8107 39.9813 38.4521Z"
                                        fill="#6F6969"
                                    />
                                </svg>
                            </div>
                        </div>
                    ))
                )}
            </div>
        </div>
    );
}

export default AdminCloud